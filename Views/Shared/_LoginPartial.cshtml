@* @if (User.Identity.IsAuthenticated)
{
    <li class="nav-item">
        <span class="nav-link">Hello, @User.Identity.Name!</span>
    </li>
    <li class="nav-item">
        <form asp-controller="Account" asp-action="Logout" method="post">
            <button type="submit" class="btn btn-link">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link" asp-controller="Account" asp-action="Login">Login</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" asp-controller="Account" asp-action="Register">Register</a>
    </li>
} *@

@using Microsoft.AspNetCore.Identity
@using AspNetCore_MVC_Project.Models
@using AspNetCore_MVC_Project.Data
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject ApplicationDbContext DbContext

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);
        var companyName = "No Company"; // Значение по умолчанию

        if (user?.CompanyId != null)
        {
            var company = await DbContext.Companies.FindAsync(user.CompanyId);
            if (company != null)
            {
                companyName = company.Name;
            }
        }

        <li class="nav-item">
            <span class="nav-link">
                Hello, <string>@user.UserName</string> from @companyName!
            </span>
        </li>
        <li class="nav-item">
            <form asp-area="" asp-controller="Account" asp-action="Logout" method="post">
                <button type="submit" class="btn btn-link nav-link">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Login">Login</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Register">Register</a>
        </li>
    }
</ul>
