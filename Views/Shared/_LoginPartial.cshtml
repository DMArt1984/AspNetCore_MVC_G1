@using AspNetCore_MVC_Project.Data
@using AspNetCore_MVC_Project.Models
@using AspNetCore_MVC_Project.Models.Control
@using Microsoft.AspNetCore.Identity

<!-- Внедрение зависимостей для работы с аутентификацией и базой данных -->
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject ApplicationDbContext DbContext

@functions {
    /// <summary>
    /// Получает название компании, к которой привязан пользователь.
    /// </summary>
    /// <param name="user">Текущий пользователь</param>
    /// <returns>Название компании или "No Company", если компания не найдена</returns>
    public async Task<string> GetCompanyName(ApplicationUser user)
    {
        if (user?.FactoryId != null) // Проверяем, есть ли у пользователя привязанная компания
        {
            var company = await DbContext.Factories.FindAsync(user.FactoryId); // Ищем компанию в БД
            return company?.Title ?? "No Company"; // Если компания найдена, возвращаем ее название, иначе "No Company"
        }
        return "No Company"; // Если у пользователя нет компании, возвращаем "No Company"
    }
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User)) // Проверяем, авторизован ли пользователь
    {
        var user = await UserManager.GetUserAsync(User); // Получаем текущего пользователя

        if (user != null) // Проверяем, что пользователь найден
        {
            var companyName = await GetCompanyName(user); // Получаем название компании пользователя

            <li class="nav-item">
                <span class="nav-link">
                    Привет, <string>@user.UserName</string> из @companyName!
                </span>
            </li>
            <li class="nav-item">
                <!-- Форма выхода из системы -->
                <form asp-area="" asp-controller="Account" asp-action="Logout" method="post">
                    <button type="submit" class="btn btn-link nav-link">Выход</button>
                </form>
            </li>
        }
        else
        {
            <!-- Если пользователь не найден, показываем ссылки на вход и регистрацию -->
            @await Html.PartialAsync("_LoginRegisterLinks")
        }
    }
    else
    {
        <!-- Если пользователь не авторизован, показываем ссылки на вход и регистрацию -->
        @await Html.PartialAsync("_LoginRegisterLinks")
    }
</ul>
